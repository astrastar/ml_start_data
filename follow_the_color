import requests

limit = 1000
url1 = f'https://min-api.cryptocompare.com/data/histohour?fsym=BTC&tsym=USD&limit={limit}'

req = requests.get(url1)
res = req.json().get('Data')
# print(res)

result = 0
res_list = []
res_list2 = []

# simple follow_the_color stratagy - doesn't work
for i in range(len(res) - 1):
    if res[i].get('close') - res[i].get('open') > 0:
        x = res[i + 1].get('close') - res[i + 1].get('open')
        y = res[i].get('high') - res[i].get('open')
        # stop loss - 50
        if res[i + 1].get('low') - res[i + 1].get('open') <= -50:
            x = -40
        else:
            x = res[i + 1].get('close') - res[i + 1].get('open')
        res_list.append(round(x, 4))
        res_list2.append(round(y, 4))
        # print('buy, profit =', x)
        result += x
    else:
        x = res[i + 1].get('open') - res[i + 1].get('close')
        y = res[i].get('open') - res[i].get('low')
        # stop loss -50
        if res[i + 1].get('open') - res[i + 1].get('high') <= -50:
            x = -40
        else:
            x = res[i + 1].get('open') - res[i + 1].get('close')
        res_list.append(round(x, 4))
        res_list2.append(round(y, 4))
        result += x
        # print('sell, profit =', x)

# follow_the_color_2_steps strategy
# for i in range(len(res) - 2):
#     if res[i].get('close') - res[i].get('open') > 0 and res[i + 1].get('close') - res[i + 1].get('open') > 0:
#         x = res[i + 2].get('close') - res[i + 2].get('open')
#         res_list.append(round(x, 4))
#         print('buy, profit =', x)
#         result += x
#     elif res[i].get('close') - res[i].get('open') > 0 and res[i + 1].get('close') - res[i + 1].get('open') < 0:
#         x = res[i + 2].get('open') - res[i + 2].get('close')
#         res_list.append(round(x, 4))
#         print('sell, profit =', x)
#         result += x
#     else:
#         pass

pos = 0
neg = 0

for i in res_list:
    if i > 0:
        pos += 1
    else:
        neg += 1

print('Total profit =', result)
print(f'max {max(res_list)}, min {min(res_list)}, pos {pos}, neg {neg}')
print(res_list)


def avrg_trade(list):

    pos_list = []
    neg_list = []

    for x in list:
        if x > 0:
            pos_list.append(x)
        else:
            neg_list.append(x)

    pos_trade = sum(pos_list) / len(pos_list)
    neg_trade = sum(neg_list) / len(neg_list)
    print('Average pos trade = ', pos_trade)
    print('Average neg trade = ', neg_trade)


# avrg_trade(res_list)
# print(res_list2)
print(sum(res_list2) / len(res_list2))
